Provision and manage virtual machines from cloud providers

Vimma is distributed under the BSD 3-clause license, see the file COPYING.

The DOC file has some explanations about the structure & features.


Installation:

Use Python3, e.g. in a virtual environment:
virtualenv -p python3 env
. env/bin/activate

pip install -r req.txt

Set up local_settings.py:
― Type a random string for the SECRET_KEY
― Choose the DB (the file has instructions for DBs that need additional setup)
cd vimmasite
cp local_settings.py.example local_settings.py
cd -

Set up AWS credentials for dev testing:
cd dev-data
cp secrets.py.template secrets.py
cd -

During initial development don't use migrations. There's too much change and
experimentation. Instead, create the data model every time.
Remember to run this every time you make a change (or update your repository):
rm -f vimmasite/vimma/migrations/0*.py
./vimmasite/manage.py makemigrations

Install PolymerJS:
cd vimmasite/vimma/static/vimma/components
bower install Polymer/polymer Polymer/core-elements Polymer/paper-elements
cd -


Run Tests:
rm -f vimmasite/vimma/migrations/0*.py
./vimmasite/manage.py makemigrations
./vimmasite/manage.py test vimma --settings=test_settings


To run the project:

Reset DB data and migrations:
rm -f vimmasite/db.sqlite3 vimmasite/vimma/migrations/0*.py
./vimmasite/manage.py makemigrations
./vimmasite/manage.py migrate
cat dev-data/secrets.py dev-data/make-data.py | ./vimmasite/manage.py shell

Start rabbitmq:
rabbitmq-server

Start celery:
cd vimmasite
celery -A vimma.celery:app worker -l info

Start the celery periodic task scheduler:
cd vimmasite
celery -A vimma.celery:app beat -l info

Run the webserver:
REMOTE_USER=u2 ./vimmasite/manage.py runserver

http://localhost:8000/vimma/
http://localhost:8000/vimma/test
